---
- name: ensure docker-registry directory exists
  file:
    path: "{{ base_dir }}/docker-registry/{{ item }}"
    state: directory
  with_items:
  - registry
- name: ensure docker-registry ui directory exists
  file:
    path: "{{ base_dir }}/docker-registry-ui/{{ item }}"
    state: directory
  with_items:
  - crt
  - key
- name: create docker-registry container
  docker:
    name: docker-registry
    docker_api_version: "{{docker_api_version}}"
    dns:
    - "{{dns_addr}}"
    dns_search:
    - "{{dns_search}}"
    hostname: docker-registry
    image: registry:2
    state: running
    volumes:
    - "{{ base_dir }}/docker-registry/registry/:/var/lib/registry"
    ports:
    - "5003:5000"
- name: create docker-registry-ui container
  docker:
    name: docker-registry-ui
    docker_api_version: "{{docker_api_version}}"
    dns:
    - "{{dns_addr}}"
    dns_search:
    - "{{dns_search}}"
    hostname: docker-registry-ui
    image: konradkleine/docker-registry-frontend:latest
    state: reloaded
    volumes:
    - "{{ base_dir }}/docker-registry-ui/crt/:/etc/apache2/server.crt"
    - "{{ base_dir }}/docker-registry-ui/key/:/etc/apache2/server.key"
    ports:
    - "8080:80"
    env:
      ENV_DOCKER_REGISTRY_HOST: "docker-registry"
      ENV_DOCKER_REGISTRY_PORT: "5000"
#      ENV_REGISTRY_PROXY_FQDN: "docker-registry"
#      ENV_REGISTRY_PROXY_PORT: "5003"
#      ENV_USE_SSL: "yes"
#    ports:
#    - "443:443"
    links:
    - "docker-registry:docker-registry"
